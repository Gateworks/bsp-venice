# misc config
bootdelay 5
baudrate 115200
console ttymxc1,115200 earlycon=ec_imx6q,0x30890000,115200
bootargs net.ifnames=0
dev 2
preboot gsc wd-disable
# configure addrs friendly for 1GiB min DRAM allowing 128MB of kernel
loadaddr 0x48200000
kernel_addr_r 0x48200000
fdt_addr_r 0x50200000
scriptaddr 0x50280000
ramdisk_addr_r 0x50300000
kernel_comp_addr_r 0x40200000
# list of boot targets searched
boot_targets mmc1 mmc2 usb0 usb1 dhcp
# list of dirs within a partition that are searched for for boot scripts
boot_prefixes / /boot/
# list of boot script filenames to search for
boot_scripts boot.scr
# Firmware Update helpers (set dev/image prior to calling)
ipaddr 192.168.1.1
serverip 192.168.1.146
# update boot firmare of $dev with $image (flash.bin)
update_firmware tftpboot $loadaddr $image && setexpr blkcnt $filesize + 0x1ff && setexpr blkcnt $blkcnt / 0x200 && mmc dev $dev && mmc write $loadaddr 0x42 $blkcnt
# update 16MB+ of $dev with compressed $image
update_rootfs tftpboot $loadaddr $image && gzwrite mmc $dev $loadaddr $filesize 100000 1000000
# update entire $dev with compressed $image
update_all tftpboot $loadaddr $image && gzwrite mmc $dev $loadaddr $filesize
# useful network boot commands (set bootargs/image before running)
boot_net setenv fsload tftpboot; setenv dir venice; run loadfdt && tftpboot $kernel_addr_r venice/Image && booti $kernel_addr_r - $fdt_addr_r
loadfdt if $fsload $fdt_addr_r $dir/$fdt_file1; then echo loaded $fdt_file1; elif $fsload $fdt_addr_r $dir/$fdt_file2; then echo loaded $fdt_file2; elif $fsload $fdt_addr_r $dir/$fdt_file3; then echo loaded $fdt_file3; elif $fsload $fdt_addr_r $dir/$fdt_file4; then echo loaded $fdt_file4; elif $fsload $fdt_addr_r $dir/$fdt_file5; then echo loaded $fdt_file5; fi
