# distro-config bootscript
#  - use only well-known variable names provided by U-Boot Distro boot
#    - devtype - device type script run from (mmc|usb|scsi)
#    - devnum - device number script run from (0 based int)
#    - distro_bootpart - partition script run from (0 based int)
#    - prefix - directory boot script was found in
#    - kernel_addr_r - address to load kernel image to
#    - fdt_addr_r - address to load dtb to
#    - ftdcontroladdr - address dtb is at
#    - fdt_file{1,2,3,4,5} name of fdt to load
echo "Venice Boot Script"

# determine root device using uuid
part uuid ${devtype} ${devnum}:${distro_bootpart} uuid

# bootargs
setenv bootargs console=$console root=PARTUUID=${uuid} rootwait $bootargs

# load dtb (we try fdt_file and then fdt_file{1,2,3,4,5})
echo "loading DTB..."
setenv fdt_addr
setenv fdt_list $fdt_file $fdt_file1 $fdt_file2 $fdt_file3 $fdt_file4 $fdt_file5
setenv load_fdt 'echo Loading $fdt...; load ${devtype} ${devnum}:${distro_bootpart} ${fdt_addr_r} ${prefix}${fdt} && setenv fdt_addr ${fdt_addr_r}'
for fdt in ${fdt_list}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${fdt}; then run load_fdt; fi; done
if test -z "$fdt_addr"; then echo "Warning: Using bootloader DTB"; setenv fdt_addr $fdtcontroladdr; fi
if test -n "$fixfdt"; then echo "Adjusting FDT"; run fixfdt; fi

# load and boot kernel
echo "loading kernel..."
load ${devtype} ${devnum}:${distro_bootpart} ${kernel_addr_r} ${prefix}kernel.itb &&
bootm ${kernel_addr_r} - ${fdt_addr}

